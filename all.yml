---
# To pass sudo previliges set NOPASSWD: in /etc/sudoers file for the group or user that we will be used to login in hosts
# Example: %sudo	ALL=(ALL) NOPASSWD: ALL
# Note: make changes before changing hostname else sudo command may timeout through ansible because
# if we change hostname first then sudo command takes time to execute. Reboot host in you changed hostname first

# Setup hosts and k8s package installation

#- hosts: docker-cluster-servers
#  become: true
#  become_method: sudo
#  vars_files:
#    - group_vars/all
#  roles:
#    - host-setup
#     - 1-k8s-common

# Initialize master
#- hosts: master
#  become: true
#  become_method: sudo
#  vars_files:
#    - group_vars/all
#  roles:
#    - 2-k8s-master

# Setup env for non-root user and install pod network
#- hosts: master
#  become: false
#  vars_files:
#    - group_vars/all
#  roles:
#    - 3-k8s-env-pod

# Join slaves in cluster
#- hosts: nodes
#  become: true
#  become_method: sudo
#  vars_files:
#    - group_vars/all
#  roles:
#    - 4-k8s-join-slaves

# check clsuter status
#- hosts: master
#  become: true
#  become_method: sudo
#  vars_files:
#    - group_vars/all
#  roles:
#    - 5-k8s-status

# deploy nginx app
- hosts: master
  become: true
  become_method: sudo
  vars_files:
    - group_vars/all
  roles:
    - 6-k8s-deploy-nginx

# Optional: Copy kubeconfig to local system and use kubectl locally. Make sure kubectl pkg install in local system.
# if not, this talk would install it.
#Note: This task is incomplete. Work in progress. Do not try now.
#- hosts: localhost
#  become: true
#  become_method: sudo
#  vars_files:
#    - group_vars/all
#  roles:
#    - k8s-local-kubectl
